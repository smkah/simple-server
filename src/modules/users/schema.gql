type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  tokens: [Token]!
  roles: [Role!]
  createdAt: String
  updatedAt: String
  deletedAt: String
}
type LogedUser {
  userId: ID!
  token: String!
}
input UserInput {
  name: String!
  email: String!
  password: String!
}
type Query {
  getUsers: [User!]!
  getUser(id: ID!): User!
}
type Mutation {
  login(email: String, password: String): LogedUser!
  logout(userId: ID!): Boolean!
  createUser(data: UserInput!): User!
  updateUser(id: ID!, data: UserInput!): User!
  deleteUser(id: ID!): User!
}
